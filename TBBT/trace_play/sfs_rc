##############################################################################
#
#	@(#)sfs_rc	2.1	97/10/23
#
# Specify SFS parameters for sfs runs in this file.
#
# The following parameters are configurable within the SFS run and
# reporting rules.
#
# See below for details.
#
# Example shows a run of 100 to 1000 ops/sec
#
LOAD="100"
INCR_LOAD=100
NUM_RUNS=10
PROCS=4
CLIENTS="client1 client2"
MNT_POINTS="srvr:/a srvr:/b srvr:/c srvr:/d srvr:/e srvr:/f srvr:/g srvr:/h"
BIOD_MAX_WRITES=2
BIOD_MAX_READS=2
TCP="on"
NFS_VERSION="3"
SFS_USER="`id | tr '()' '  ' | awk '{print $2}' `"
SFS_DIR="`pwd`/bin"
WORK_DIR="`pwd`/result"
PRIME_MON_SCRIPT=""
PRIME_MON_ARGS=""
RSH="rsh"
#
# The following parameters are strictly defined within the SFS
# run and reporting rules and may not be changed.
#
RUNTIME=300
WARMUP_TIME=300
MIXFILE=""
ACCESS_PCNT=10
APPEND_PCNT=70
BLOCK_SIZE=8
BLOCK_FILE=""
DIR_COUNT=30
FILE_COUNT=
SYMLINK_COUNT=20
#
# The following parameters are useful for debugging or general system
# tuning.  They may not be used during during a reportable SFS run.
#
DEBUG=
DUMP=
POPULATE=
PRIME_SLEEP=0
PRIME_TIMEOUT=0
#
# The default SFS options are implied if no values are assigned to
# the variables. The variables and their meaning are as follows.
#
# The following parameters are configurable within the SFS run and
# reporting rules.
#
#  LOAD		- array of numbers specifying the NFS loads
#		  (NFS calls per second) to be generated by all clients
#		  combined. The number of consecutive runs equals the size
#		  of the array and the peak load equals the largest value
#		  in the array.
#  PROCS	- number of SFS sub-processes to generate NFS
#		  calls (DEFAULT PROCS = 4).
#  MNT_POINTS	- string containing the mount points of NFS-mounted
#		  filesystems on the client which will be used in the test.
#  BIOD_MAX_WRITES - maximum number of outstanding async (biod) writes
#		  (DEFAULT BIOD_MAX_WRITES = 2).
#  BIOD_MAX_READS - maximum number of outstanding async (biod) reads
#		  (DEFAULT BIOD_MAX_READS = 2).
#  TCP		- If set ("on") then use NFS/TCP behaviour rather
#  NFS_VERSION	- Set the version of the NFS protocol to use
#		  (DEFAULT [or unset] NFS_VERSION = 2)
#  NUM_RUNS	- number indicating the number of multi-client runs. NUM_RUNS
#		  should only be used if the size of the LOAD array <= 1;
#  INCR_LOAD	- number indicating the load increment factor in NFS call/sec.
#		  The first run generates LOAD calls/sec,
#		  subsequent runs are made with LOAD + (N * INCR_LOAD)
#		  calls/sec; where initial N = 0. INCR_LOAD should
#		  only be used if the size of the LOAD array <= 1.
#  CLIENTS	- string containing client's host names; include the Prime-
#		  Client's host name if you will be using the Prime-Client to
#		  generate NFS loads.
#  SFS_USER	- string containing the user account name that has appropriate
#		  permission to execute SFS on each of the clients. The
#		  user account name used on the Prime-Client should be added
#		  to the SFS_USER's .rhosts file on each of the clients.
#  SFS_DIR	- string containing the directory path where the SFS
#		  executables are stored; should be the same for all systems
#  WORK_DIR	- string containing directory path where the SFS output
#		  files are stored, this should be the same for all systems.
#  RSH		- OS dependent version of remote shell executable ON THE
#		  PRIME CLIENT
#  PRIME_MON_SCRIPT - string containing the name of a shell script used to
#		  control the start and stop of any external SFS
#		  processes like external performance monitors. The sample
#		  The sample shell script 'sfs_ext_mon' shows the
#		  expected semantics of the program.
#  PRIME_MON_ARGS - string containing optional arguments that are passed
#		  to the PRIME_MON_SCRIPT.
#
# The following parameters are strictly defined within the SFS
# run and reporting rules and may not be changed.
#
#  RUNTIME	- number of seconds to generate load
#		  (DEFAULT RUNTIME = 300).
#  WARMUP_TIME	- number of seconds to warmup
#		  (DEFAULT WARMUP_TIME = 300).
#  MIXFILE	- string containing the NFS call distribution filename;
#		  a copy of $MIXFILE must be placed in the $WORK_DIR
#		  directory on the Prime_Client. The Prime-Client will
#		  propagate a copy to all the other clients in the test.
#  ACCESS_PCNT	- percent of total file set available for use by i/o
#		  operations that will be accessed.
#		  (DEFAULT ACCESS_PCNT = 10).
#  APPEND_PCNT	- percent of writes that append rather than overwrite
#		  (DEFAULT APPEND_PCNT = 70).
#  BLOCK_SIZE	- number of KB in a block, up to 8 KB
#		  (DEFAULT BLOCK_SIZE = 8 ).
#  BLOCK_FILE	- string containing the block transfer sizes filename.
#		  A copy of $BLOCK_FILE must be placed in the $WORK_DIR
#		  directory on the Prime_Client. The Prime-Client will
#		  propagate a copy to all the other clients in the test.
#  DIR_COUNT	- number of files per directory to use for directory
#		  operations (DEFAULT DIR_COUNT = 30).
#  FILE_COUNT	- number of files to use for read and write
#		  operations. By default, number of files is
#		  calculated from the specified LOAD and ACCESS_PCNT.
#  SYMLINK_COUNT - number of symbolic links to use for symlink
#		  operations (DEFAULT SYMLINK_COUNT = 20).
#
# The following parameters are useful for debugging or general system
# tuning.  They may not be used during during a reportable SFS run.
#
#  DUMP		- If set, dump raw data points at end of run
#  POPULATE	- If set ("on") the only populate the file set and do
#		  run test.
#
#  PRIME_SLEEP	- number of seconds Prime-Client should sleep after starting
#		  and stopping the SFS external monitoring facility and
#		  before sending synchronization message to clients. This is a
#		  provision to allow sufficient time for starting and stopping
#		  other performance monitoring utilities that could be used
#		  during SFS execution.
#  PRIME_TIMEOUT - number of seconds Prime-Client should wait for a
#		  response from all the clients.  Zero indicates the
#		  default should be used.
