##############################################################################
#
#	@(#)sfs_nfs_rc	$Revision: 1.13 $
#
# Specify SFS parameters for sfs runs in this file.
#
# The following parameters are configurable within the SFS run and
# reporting rules.
#
# See below for details.
#
# Example shows an NFS V3 run of 100 to 1000 ops/sec
#
LOAD="100"
INCR_LOAD=100
NUM_RUNS=25
PROCS=16
CLIENTS="vrable1.sysnet.ucsd.edu"
MNT_POINTS="vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export vrable2.sysnet.ucsd.edu:/export"
BIOD_MAX_WRITES=8
BIOD_MAX_READS=8
IPV6_ENABLE="off"
FS_PROTOCOL="nfs"
SFS_DIR="bin"
SUFFIX=""
WORK_DIR="result"
PRIME_MON_SCRIPT=""
PRIME_MON_ARGS=""
INIT_TIMEOUT=8000
# Leaving BLOCK_SIZE un-set is the default. This will permit auto-negotiation.
# If you over-ride this and set it to a particular value, you must
# add the value that you used to the Other Notes section of the 
# submission/disclosure.
BLOCK_SIZE=
# SFS_NFS_USER_ID only needed if running NFS load on Windows client 
# It's value should match the UID, of the user's account, on the NFS server.
SFS_NFS_USER_ID=500
# SFS_NFS_GROUP_ID only needed if running NFS load on Windows client 
# It's value should match the GID, of the user's account, on the NFS server.
SFS_NFS_GROUP_ID=500
#
# The following parameters are strictly defined within the SFS
# run and reporting rules and may not be changed.
#
RUNTIME=300
WARMUP_TIME=300
MIXFILE=""
ACCESS_PCNT=30
APPEND_PCNT=70
BLOCK_FILE=""
DIR_COUNT=30
FILE_COUNT=
#FILE_COUNT=150000
SYMLINK_COUNT=20
TCP="on"
#
# The following parameters are useful for debugging or general system
# tuning.  They may not be used during during a reportable SFS run.
#
DEBUG=""
DUMP=
POPULATE=
LAT_GRAPH=
PRIME_SLEEP=0
PRIME_TIMEOUT=0
#
# The default SFS options are implied if no values are assigned to
# the variables. The variables and their meaning are as follows.
#
# The following parameters are configurable within the SFS run and
# reporting rules.
#
#  LOAD		- array of numbers specifying the NFS loads
#		  (NFS calls per second) to be generated by all clients
#		  combined. The number of consecutive runs equals the size
#		  of the array and the peak load equals the largest value
#		  in the array. (DEFAULT = 60)
#  PROCS	- number of SFS sub-processes to generate NFS
#		  calls (DEFAULT PROCS = 4).
#  MNT_POINTS	- string containing the mount points of NFS-mounted
#		  filesystems on the client which will be used in the test or
#		  it can be set to the name of a file containing a list of
#		  mount points. The file should be located in WORK_DIR. The
#		  file should have the following format:
#			client1	svr:/mnt1 ... svr:/mntM
#			...
#			clientN	svr:/mntL ... svr:/mntL+M
#
#  BIOD_MAX_WRITES - maximum number of outstanding async (biod) writes
#		  (DEFAULT BIOD_MAX_WRITES = 2).
#  BIOD_MAX_READS - maximum number of outstanding async (biod) reads
#		  (DEFAULT BIOD_MAX_READS = 2).
#  IPV6_ENABLE	- If set ("on") then use IP V6 otherwise use IP V4.
#		  (DEFAULT IPV6_ENABLE = "off").
#  FS_PROTOCOL	- File server protocol used "cifs" or "nfs"
#		  (DEFAULT FS_PROTOCOL = "nfs")
#  NUM_RUNS	- number indicating the number of multi-client runs. NUM_RUNS
#		  should only be used if the size of the LOAD array <= 1;
#  INCR_LOAD	- number indicating the load increment factor in NFS call/sec.
#		  The first run generates LOAD calls/sec,
#		  subsequent runs are made with LOAD + (N * INCR_LOAD)
#		  calls/sec; where initial N = 0. INCR_LOAD should
#		  only be used if the size of the LOAD array <= 1.
#  CLIENTS	- string containing client's host names; include the Prime-
#		  Client's host name if you will be using the Prime-Client to
#		  generate NFS loads.
#  SFS_NFS_USER_ID - ID number to use as the User ID (UID) on the NFS server.
#  SFS_NFS_GROUP_ID - ID number to use as the Group ID (GID) on the NFS server.
#		  for NFS requests to the server.
#  SFS_DIR	- string containing the directory path where the SFS
#		  executables are stored; should be the same for all systems
#		  This location is used first, if the binaries are not found
#		  there then it looks in the "binaries" directory.
#		  (DEFAULT SFS_DIR = "bin")
#  SUFFIX	- Suffix for the log files.
#  WORK_DIR	- string containing directory path where the SFS output
#		  files are stored, this should be the same for all systems.
#  PRIME_MON_SCRIPT - string containing the name of a script used to
#		  control the start and stop of any external SFS processes
#		  like external performance monitors. The sample script
#		  'sfs_ext_mon' shows the expected semantics of the program.
#		  This variable must refer to an executable on a Windows
#		  client.
#  PRIME_MON_ARGS - string containing optional arguments that are passed
#		  to the PRIME_MON_SCRIPT.
#
# The following parameters are strictly defined within the SFS
# run and reporting rules and may not be changed.
#
#  RUNTIME	- number of seconds to generate load
#		  (DEFAULT RUNTIME = 300).
#  TCP		- If set ("on") then use NFS/TCP behaviour rather than UDP.
#  WARMUP_TIME	- number of seconds to warmup
#		  (DEFAULT WARMUP_TIME = 300).
#  MIXFILE	- string containing the NFS call distribution filename;
#		  a copy of $MIXFILE must be placed in the $WORK_DIR
#		  directory on the Prime_Client. The Prime-Client will
#		  propagate a copy to all the other clients in the test.
#  ACCESS_PCNT	- percent of total file set available for use by i/o
#		  operations that will be accessed.
#		  (DEFAULT ACCESS_PCNT = 20).
#  APPEND_PCNT	- percent of writes that append rather than overwrite
#		  (DEFAULT APPEND_PCNT = 70).
#  BLOCK_SIZE	- number of KB in a block, up to 4 Meg.
#		  (Value is automatically negoitated with the server)
#  BLOCK_FILE	- string containing the block transfer sizes filename.
#		  A copy of $BLOCK_FILE must be placed in the $WORK_DIR
#		  directory on the Prime_Client. The Prime-Client will
#		  propagate a copy to all the other clients in the test.
#  DIR_COUNT	- number of files per directory to use for directory
#		  operations (DEFAULT DIR_COUNT = 30).
#  FILE_COUNT	- number of files to use for read and write
#		  operations. By default, number of files is
#		  calculated from the specified LOAD and ACCESS_PCNT.
#  SYMLINK_COUNT - number of symbolic links to use for symlink
#		  operations (DEFAULT SYMLINK_COUNT = 20).
#
# The following parameters are useful for debugging or general system
# tuning.  They may not be used during during a reportable SFS run.
#
#  DUMP		- If set to a non-zero value, dump raw data points at end of
#		  run. (DEFAULT DUMP = 0 ).
#  LAT_GRAPH    - Debug option that enable per op latency graph data. 
#                 May invalidate the results due to overhead of logging.
#                 If set ("on") will enable logging. Default is ""
#  POPULATE	- If set ("on") then only populate the file set but do not
#		  run the test.
#  PRIME_SLEEP	- number of seconds Prime-Client should sleep after starting
#		  and stopping the SFS external monitoring facility and
#		  before sending synchronization message to clients. This is a
#		  provision to allow sufficient time for starting and stopping
#		  other performance monitoring utilities that could be used
#		  during SFS execution.
#  PRIME_TIMEOUT - number of seconds Prime-Client should wait for a
#		  response from all the clients.  Zero indicates the
#		  default should be used.
#  INIT_TIMEOUT - number of seconds Prime-Client should wait for a
#                 response from all the clients during the INIT phase.
#                 May be changed if needed and will not invalidate the
#                 run.
